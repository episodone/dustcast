
name: Python CI 

on:
  push:
    branches: [ main ]
    tags: [ deployment ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["pypy3.10", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
      # You can test your matrix by printing the current Python version
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    - name: Get the version
      id: vars
      run: echo ::set-output name=tag::$(echo ${GITHUB_SHA:10})
    - name: Docker login
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
      run : docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" docker.io
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKERHUB_REPO_NAME}}:${{steps.vars.outputs.tag}}
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKERHUB_REPO_NAME}}:${{steps.vars.outputs.tag}}
    - name: Build Docker image with latest tag
      run: docker build . --file Dockerfile --tag ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKERHUB_REPO_NAME}}:latest
    - name: Publish dockerimage to docker hub
      run: docker push ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKERHUB_REPO_NAME}}:latest

  server_update:
    needs: build
    name: Update server buy ssh
    runs-on: ubuntu-latest
    steps:
      - name: Connect and run script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: 22
          username: root
          key: ${{ secrets.KEY }}
          script_stop: true
          script: bash deploy_api.sh